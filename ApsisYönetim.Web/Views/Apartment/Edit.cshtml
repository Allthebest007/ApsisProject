@model EditApartmentDto

@{
    ViewData["Title"] = "Edit";
}



<h4>Apartman Düzenle</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BlocNo" class="control-label"></label>
                <input asp-for="BlocNo" class="form-control" />
                <span asp-validation-for="BlocNo" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="ApartType" class="control-label"></label>
                <input asp-for="ApartType" class="form-control" />
                <span asp-validation-for="ApartType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FloorNo" class="control-label"></label>
                <input asp-for="FloorNo" class="form-control" />
                <span asp-validation-for="FloorNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, "User ", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.UserId, ViewBag.Users as SelectList, "User seçiniz", htmlAttributes: new { @class = "form-control" })
            </div>
            @Html.HiddenFor(x=>x.ID)
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
